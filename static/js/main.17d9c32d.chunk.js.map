{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleSetModalTodo","modalActiveTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","handleSetFilter","query","handleSetQuery","resetQuery","onChange","event","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","handleResetUser","useState","user","setUser","Error","loadUser","a","userFromServer","useEffect","href","email","name","App","setTodos","setQuery","todoActiveFilter","setTodoActiveFilter","setModalActiveTodo","loadTodos","todosFromServer","preparedTodos","useMemo","filter","includes","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17d9c32d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleSetModalTodo: (todo:Todo) => void;\n  modalActiveTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleSetModalTodo,\n  modalActiveTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': modalActiveTodo,\n            })}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSetModalTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': modalActiveTodo?.id !== id,\n                    'fa-eye-slash': modalActiveTodo?.id === id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  handleSetFilter: (event:React.ChangeEvent<HTMLSelectElement>) => void;\n  query: string;\n  handleSetQuery: (event:React.ChangeEvent<HTMLInputElement>) => void;\n  resetQuery: () => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  handleSetFilter,\n  query,\n  handleSetQuery,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => handleSetFilter(event)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => handleSetQuery(event)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => resetQuery()}\n            />\n          </span>\n        )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  modalActiveTodo: Todo | null;\n  handleResetUser: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  modalActiveTodo,\n  handleResetUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = modalActiveTodo || {};\n\n  if (!userId) {\n    throw new Error('userId is not defined');\n  }\n\n  const loadUser = async () => {\n    const userFromServer = await getUser(userId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(\n    () => {\n      loadUser();\n    },\n    [],\n  );\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleResetUser}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [todoActiveFilter, setTodoActiveFilter] = useState('');\n  const [modalActiveTodo, setModalActiveTodo] = useState<Todo | null>(null);\n\n  const handleResetUser = () => {\n    setModalActiveTodo(null);\n  };\n\n  const handleSetFilter = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoActiveFilter(event.target.value);\n  };\n\n  const handleSetQuery = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  const handleSetModalTodo = (todo: Todo) => {\n    setModalActiveTodo(todo);\n  };\n\n  const loadTodos = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  };\n\n  useEffect(\n    () => {\n      loadTodos();\n    },\n    [],\n  );\n\n  let preparedTodos = todos;\n\n  useMemo(() => {\n    switch (todoActiveFilter) {\n      case 'active':\n        preparedTodos = preparedTodos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        preparedTodos = preparedTodos.filter(todo => todo.completed);\n        break;\n      case 'all':\n        setTodoActiveFilter('');\n        break;\n      default:\n        break;\n    }\n\n    if (query) {\n      preparedTodos = preparedTodos.filter(todo => todo.title.includes(query));\n    }\n  }, [todoActiveFilter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleSetFilter={handleSetFilter}\n                query={query}\n                handleSetQuery={handleSetQuery}\n                resetQuery={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={preparedTodos}\n                    handleSetModalTodo={handleSetModalTodo}\n                    modalActiveTodo={modalActiveTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalActiveTodo\n        && (\n          <TodoModal\n            modalActiveTodo={modalActiveTodo}\n            handleResetUser={handleResetUser}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}